####################################################################                                                                                                                                                                                           
# TourTimeOfDayDAPFirstTours.py
# Configuration script for Tour Time Of Day processing of 
# the first tours generated by the DAP model
# these are a mixture of school, university and work tours
# in this file there is no input file for PersonDaySchedules 
# because no tour TOD has taken place before this
# instead there is the ___PERSONS_FILE___ file
####################################################################                                                                                                                                                                                           

from Globals import * 

instantiationType="MultiModelComponent" 

modelComponentName="TourTimeOfDayHomeBased"

subModels = {
             "SchoolUniversity": r"TourTimeOfDaySubmodel_SchoolUniversity.py",
             "Work": r"TourTimeOfDaySubmodel_Work.py"
            }
			
parameters={
			"OperatingCostCentsPerMile":autoOpCost
            }			

dataReferences = [

    {"type" : "dbffile",
     "name" : "Tours",
     "filename" : cube___FIRST_MANDATORY_TOUR_TIME_OF_DAY___,
     "columns" : [
                  "personId", 
                  "hhId", 
                  "persTourId", 
                  "tourPurp", 
                  "personType", 
                  "cType1",
                  "cType2", 
                  "cType3", 
                  "cType4", 
                  "cType5", 
                  "age", 
                  "male", 
                  "destZoneId", 
                  "workZoneId", 
                  "hhinc5s", 
                  "wkGtCarGt0", 
                  "homeZoneId", 
                  "noStopTour", 
                  "tourCount", 
                  "hhc1tour", 
                  "hhc2tour", 
                  "hhc3tour", 
                  "hhc4tour",                   
                  "hhc5tour", 
                  "hhChildSah",
				  "adult1Kids",
				  "hchild2",
				  "hchild3"
                  ],
     "deferredLoad" : True 
    },


# this input is present only for first tours
   {"type" : "dbffile",
     "name" : "InputPersons",     
     "filename" : cube___PERSONS_FILE___, # file paths MUST BE RAW strings (preceded by 'r')
     # parameters could be generally of form source data reference : field
     "columns" : [
                       "personId",
                       "hhzon"
                    ],
     "deferredLoad" : True 
    },

    {"type" : "dbffile",
     "name" : "Zones",
     "filename" : cube___ZONES_FILE___, 
     "columns" : ["zoneId", "term_time", "park_cost"]
    },

   {"type" : "dbffile",
     "isOutput": "true",
     "name" : "OutputTours",     
     "filename" : cube___DAP_TOUR_TIME_OF_DAY_CHOICE_FIRST_TOURS___, # file paths MUST BE RAW strings (preceded by 'r')
     # parameters could be generally of form source data reference : field
     "parameters" : [
                       [ "Person id", "personId"],
                       [ "household id", "hhId"],
                       [ "tour", "persTourId"],
                       [ "tour purpose", "tourPurp"],
                       [ "PersonType", "personType"], 
                       [ "child 0-4", "cType1"], 
                       [ "child 5-10", "cType2"], 
                       [ "child 11-13", "cType3"], 
                       [ "child 14-15", "cType4"], 
                       [ "child 16+", "cType5"], 
                       [ "age", "age"], 
                       [ "male", "male"], 
                       [ "DestinationZone", "destZoneId"], 
                       [ "WorkplaceZone", "workZoneId"],
                       [ "hhinc5s", "hhinc5s"], 
                       [ "wkGtCarGt0", "wkGtCarGt0"],
                       [ "homeZone", "homeZoneId"],
                       [ "nonstop tour", "noStopTour"],
                       [ "tourCount", "tourCount"],
                       [ "@arrival", "arrival"],
                       [ "@departure", "departure"],
                       [ "@duration", "duration"]
                       # using '@' in data source name indicates this field is generated by the component, so requires some coordination with C# code
                    ]
    },
    
    # OutputPersonDaySchedules (different file name for different TOD stages) will be full set of persons with entire schedule, up to date after each run
   {"type" : "dbffile",
     "isOutput": "true",
     "name" : "OutputPersonDaySchedules",     
     "filename" : cube___DAP_TOUR_TIME_OF_DAY_PERSON_SCHEDULES_FIRST_TOURS___, # file paths MUST BE RAW strings (preceded by 'r')
     # parameters could be generally of form source data reference : field
     "parameters" : [
                       [ "Person id", "personId"],
                       [ "homeZoneId", "homeZoneId"],  # only for chunking
                       [ "@slotsArriv", "slotsArriv"],
                       [ "@slotsDeprt", "slotsDeprt"],
                       [ "@slotsUsed", "slotsUsed"]
                       # using '@' in data source name indicates this field is generated by the component, so requires some coordination with C# code
                    ]
    },
    

# TODO: this data is not currently being written -column set would need to be different for each TOD run - maybe I'll update it later
# the responsibility would have to fall to the submodel to write this data
   {"type" : "dbffile",
     "isOutput": "true",
     "name" : "OutputTODStats",     
     "filename" : cube___DAP_TOUR_TIME_OF_DAY_FIRST_TOUR_CHOICE_SUMMARY___, # file paths MUST BE RAW strings (preceded by 'r')
     # parameters could be generally of form source data reference : field
     "parameters" : [
                       [ "arrival", "arrival"],
                       [ "departure", "departure"],
                       [ "countSch", "countSch"],
                       [ "countUni", "countUni"],
                       [ "countWork", "countWork"],
                    ]
    },



]

from MatrixRef4Hwy import matrixReferences
