####################################################################
# VehicleAvailabilityModelPostProcessor.py
# A python script with DataReferences only
# the idea here is allow components to just select the data they need
# and then in an external component, merge data generated by the component with the proper base data sets 
# (e.g. persons, households...)
####################################################################
from Globals import * 

instantiationType="DataAssemblyComponent"
#characteristics

# the name of the corresponding class on the C# side:
# this allows for multiple scripts targeting the same component
modelComponentName="PostAADataAssembly"  


# dataReferences is an array
# each array element is a dictionary (set of key:value pairs); each dictionary has 2 required keys:  name and type
# the value corresponding to the "type" key indicates to C# how to instantiate the data reference
# the set of names is fixed for each C#-side model component
# each type constrains the set of keys to supply in the remainder of that dictionary
# e.g. a type of "db" currently (this spec is in flux) requires the connectionString and queryString
# to demonstrate that this structure can be read I've included an Excel data reference type
# and as an experiment in output, I also have a console data reference type so the component can display alternative choices
# until we have a real output spec

dataReferences = [


    # reading this in to add the cars columns for future use
    {"type" : "dbffile",
     "name" : "Persons",
     "filename" : cube___PERSONS_FILE___, 
     "columns" : [
					"HHZON",
					"AGE",
					"EmpStatus",
					"GENDER",
					"SchStatus",
					"HHID",
					"PERSONID",
					"PTYPE",
					"PTYPEDAP",
					"FEMALE",
					"CTYPE",
					"HHINC5S",
					"HCHILD1",
					"HCHILD2",
					"HCHILD3",
					"HFTW",
					"HPTW",
					"HSEN",
					"HSTUD",
					"HNWA",
					"HCHILDREN",
					"HWORKERS",
					"HHSIZE",
					"HADULTS",
					"HH1PERSON",
					"HCHILDLT16",
					"HPOTWORKAD",
					"HNOCHILDRE"
                ],
     "deferredLoad" : True # new parameter, for input Dbf only; cannot combine 'sort' parameter with this
     #"sort" : ["hhzon", "hhinc5s", "hhid"]   # sort parameter is not available when using deferredLoad
    },

    {"type" : "dbffile",
     "name" : "NCarsFromAA",     
     "filename" : cube___NUM_CARS_PER_HOUSEHOLD___,# file paths MUST BE RAW strings (preceded by 'r')
     # for dbf as input, supply columns instead of parameters
     # one problem with the way we're processing dbf files as input is that we don't have a select statement
     "columns" : ["hhid", "nCars", "noCarsInHh", "wkGtCarGt0"]
    },    


    # dbf output spec
    {"type" : "dbffile",
     "isOutput": "true",
     "name" : "OutputChildren",     
     "filename" : cube___PERSONS_CHILDREN___, 
     "parameters" : [
					["HHZON","HHZON"], #these columns directly copied from Persons input
					["AGE","AGE"],
					["EmpStatus","EmpStatus"],
					["GENDER","GENDER"],
					["SchStatus","SchStatus"],
					["HHID","HHID"],
					["PERSONID","PERSONID"],
					["PTYPE","PTYPE"],
					["PTYPEDAP","PTYPEDAP"],
					["FEMALE","FEMALE"],
					["CTYPE","CTYPE"],
					["HHINC5S","HHINC5S"],
					["HCHILD1","HCHILD1"],
					["HCHILD2","HCHILD2"],
					["HCHILD3","HCHILD3"],
					["HFTW","HFTW"],
					["HPTW","HPTW"],
					["HSEN","HSEN"],
					["HSTUD","HSTUD"],
					["HNWA","HNWA"],
					["HCHILDREN","HCHILDREN"],
					["HWORKERS","HWORKERS"],
					["HHSIZE","HHSIZE"],
					["HADULTS","HADULTS"],
					["HH1PERSON","HH1PERSON"],
					["HCHILDLT16","HCHILDLT16"],
					["HPOTWORKAD","HPOTWORKAD"],
					["HNOCHILDRE","HNOCHILDRE"],
                    ["@NCARS", "NCARS"],            # output added from NCARS
                    ["@noCarsInHh", "noCarsInHh"],  # output added from NCARS
                    ["@wkGtCarGt0", "wkGtCarGt0"],  # output added from NCARS
                    ["@pchild5", "pchild5"],        # derived output calculated here
                    ["@pchild1", "pchild1"]         # derived output calculated here
                    ]
    },

    {"type" : "dbffile",
     "isOutput": "true",
     "name" : "OutputAdults",     
     "filename" : cube___PERSONS_ADULTS___, 
     "parameters" : [
					["HHZON","HHZON"], #these columns directly copied from Persons input
					["AGE","AGE"],
					["EmpStatus","EmpStatus"],
					["GENDER","GENDER"],
					["SchStatus","SchStatus"],
					["HHID","HHID"],
					["PERSONID","PERSONID"],
					["PTYPE","PTYPE"],
					["PTYPEDAP","PTYPEDAP"],
					["FEMALE","FEMALE"],
					["CTYPE","CTYPE"],
					["HHINC5S","HHINC5S"],
					["HCHILD1","HCHILD1"],
					["HCHILD2","HCHILD2"],
					["HCHILD3","HCHILD3"],
					["HFTW","HFTW"],
					["HPTW","HPTW"],
					["HSEN","HSEN"],
					["HSTUD","HSTUD"],
					["HNWA","HNWA"],
					["HCHILDREN","HCHILDREN"],
					["HWORKERS","HWORKERS"],
					["HHSIZE","HHSIZE"],
					["HADULTS","HADULTS"],
					["HH1PERSON","HH1PERSON"],
					["HCHILDLT16","HCHILDLT16"],
					["HPOTWORKAD","HPOTWORKAD"],
					["HNOCHILDRE","HNOCHILDRE"],
                    ["@NCARS", "NCARS"],        # output added from NCARS
                    ["@noCarsInHh", "noCarsInHh"],# output added from NCARS
                    ["@wkGtCarGt0", "wkGtCarGt0"]# output added from NCARS

                    ]
    }
     
]

